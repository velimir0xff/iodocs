@import "compass";

/* Colors */

$get: #e7f0f7;
$post: #e7f6ec;
$put: #f9f2e9;
$delete: #f5e8e8;

/* Mixins */
/*
  Setting colors for a method container, the form, and http method indicator
*/
@mixin method($method: 'get', $color: $get) {
    .#{$method} {
        background: $color;
        border-color: darken($color, 15%);

        & .http-method {
            background-color: saturate(darken($color, 60%), 50%);
        }

        th, td {
            border-bottom: 1px solid darken($color, 20%);
        }
    }
}

/*
  font-family for monospace
*/
@mixin monospace() {
    font-family: 'Inconsolata', 'Monaco', 'Consolas', 'Bitstream Vera Mono', monospace;
}

html,body,div,span,object,iframe,h1,h2,h3,h4,h5,h6,p,blockquote,pre,abbr,address,cite,code,del,dfn,em,img,ins,kbd,
q,samp,small,strong,sub,sup,var,b,i,dl,dt,dd,ol,ul,li,fieldset,form,label,legend,table,caption,tbody,tfoot,thead,tr,
th,td,article,aside,canvas,details,figcaption,figure,footer,header,hgroup,menu,nav,section,summary,time,mark,audio,video {
  margin: 0;
  padding: 0;
  border: 0;
  font-size: 100%;
  font: inherit;
  vertical-align: baseline;
}

article,aside,details,figcaption,figure,footer,header,hgroup,menu,nav,section {
  display: block;
}

blockquote,q {
  quotes: none;
}

blockquote:before,blockquote:after,q:before,q:after {
  content: "";
  content: none;
}

#io-footer {
  margin-top: 25px;

    a {
        text-decoration: none;
        color: inherit;

        &:hover {
            text-decoration: underline;
            color: inherit;
        }
    }
}

.f-left {
  font-size: 8pt;
  text-align: left;
  float: left;
}

.f-right {
  font-size: 8pt;
  text-align: right;
  float: right;
}

ins {
  background-color: #ff9;
  color: #000;
  text-decoration: none;
}

mark {
  background-color: #ff9;
  color: #000;
  font-style: italic;
  font-weight: bold;
}

del {
  text-decoration: line-through;
}

abbr[title],
dfn[title] {
  border-bottom: 1px dotted;
  cursor: help;
}

table {
  border-collapse: collapse;
  border-spacing: 0;
}

hr {
  display: block;
  height: 1px;
  border: 0;
  border-top: 1px solid #cccccc;
  margin: 1em 0;
  padding: 0;
}

input,
select {
  vertical-align: middle;
}

body {
  font: 13px / 1.231 sans-serif;
  *font-size: small;
}

select,
input,
textarea,
button {
  font: 99% sans-serif;
}

pre,
code,
kbd,
samp {
  font-family: monospace, sans-serif;
}

html {
  overflow-y: scroll;
}

a:link {
  -webkit-tap-highlight-color: #ff5e99;
}

a:hover,
a:active {
  outline: none;
}

a,
a:active,
a:visited {
  color: #607890;
}

a:hover {
  color: #036;
}

ul,
ol {
  margin-left: 2em;
}

ol {
  list-style-type: decimal;
}

nav ul,
nav li {
  margin: 0;
  list-style: none;
  list-style-image: none;
}

small {
  font-size: 85%;
}

strong,
th,
b,
em {
  font-weight: bold;
}

i {
  font-style: italic;
}

td {
  vertical-align: top;
}

sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
}

sup {
  top: -0.5em;
}

sub {
  bottom: -0.25em;
}

pre {
  white-space: pre;
  white-space: pre-wrap;
  word-wrap: break-word;
  padding: 15px;
}

.ie6 legend,
.ie7 legend {
  margin-left: -7px;
}

input[type="radio"] {
  vertical-align: text-bottom;
}

input[type="checkbox"] {
  vertical-align: bottom;
}

.ie7 input[type="checkbox"] {
  vertical-align: baseline;
}

.ie6 input {
  vertical-align: text-bottom;
}

label,
input[type="button"],
input[type="submit"],
input[type="image"],
button {
  cursor: pointer;
}

button,
input,
select,
textarea {
  width: auto;
  overflow: visible;
  margin: 0;
}

.fields textarea {
  overflow: auto;
  width: 60%;
}

input::-moz-focus-inner,
button::-moz-focus-inner {
  border: 0;
  padding: 0;
}

input:invalid,
textarea:invalid {
    @include border-radius(1px);
    @include box-shadow(0,0,5px, #f00);
}

.no-boxshadow input:invalid,
.no-boxshadow textarea:invalid {
  background-color: #f0dddd;
}

%selection {
  background: #f6f5c1;
  color: #444;
  text-shadow: none;
}

::selection {
    @extend %selection;
}

::-moz-selection {
    @extend %selection;
}

.ie7 img {
  -ms-interpolation-mode: bicubic;
}


body,
select,
input,
textarea {
  color: #444;
  font-family: 'Helvetica Neue', Helvetica, Arial, sans-serif;
}

h1,h2,h3,h4,h5,h6 {
  font-weight: bold;
}

html {
  height: 100%;
}

body {
  width: 960px;
  margin: 15px auto;
  padding-bottom: 20px;
}

h1 {
  font-size: 24px;
  line-height: 1.5;
  margin-bottom: 15px;
}

h2 {
  font-weight: normal;
  font-size: 18px;
  margin-bottom: 15px;
}
h4 {
  font-weight: normal;
  font-size: 14px;
}
ul {
    margin: 0;
}

li {
    list-style: none;
    margin-left: 0;
}

div.description {
  padding: 0;
  margin: 5px 30px;
}
div.description p {
  font-size: 14px;
  line-height: 17px;
  text-align: left;
  font-weight: normal;
  margin: 0;
  margin-bottom: 10px;
}

.credentials {
    background-color: #f4f4e1;
    border: 1px solid darken(#f4f4e1, 30%);
    @include border-radius(5px);
    @include clearfix;
    padding: 15px;

    &.authed {
        background-color: #d6f6bd;
        border-color: #86bf6a;
        padding: 10px;
    }

    &.authed form {
        display: none;
    }

    img {
        margin-left: 10px;
    }

    h2 {
        margin-bottom: 10px;
    }

    div {
        float: left;
        margin-right: 15px;
    }

    form {
        margin-top: 10px;
    }

    label {
        font-weight: bold;
        display: inline-block;
        margin-bottom: 3px;
        margin-right: 10px;
        text-align: right;
        width: 160px;
    }

    input {
        display: inline-block;
        width: 400px;
    }

    #oauth-auth {
        margin-top: 20px;
    }
}

#controls {
    @include clearfix;
    margin-top: 10px;
    border: 1px solid #999999;
    border-width: 1px 0;
    padding: 10px 0;

    li {
        padding-left: 10px;
        padding-right: 10px;
        display: inline-block;

        &:not(:first-child) {
            border-left: 1px solid #dddddd;
        }
    }
}

.endpoint {
    margin: 0;
    background-color: #f9f9f9;
    border-bottom: 1px solid #eeeeee;
    @include clearfix;
    @include transition-property(background-color);
    @include transition-duration(0.5s);
    @include transition-timing-function(ease);

    &.expanded {
        background-color: #fff;                                                                   
    }

    & > .title {
        font-weight: normal;
        padding: 20px 0 10px 10px;
        @include clearfix;

        & .name {
            font-size: 18px;
            float: left;

            &:hover {
                cursor: pointer;
                text-decoration: underline;
            }
        }

        & .actions {
            float: right;

            li {
                float: left;
                padding: 0 10px;
                border-left: 1px solid #dddddd;
            }

            li:first-child {
                border: 0;
            }
        }
    }
}

.methods {
    display: none;
}

.method {
    font-size: 14px;
    border: 1px solid #eeeeee;
    @include border-radius(5px);
    margin: 10px 0;

    div.headers {
      background: rgba(255, 255, 255, 0.2);
      border: 1px solid rgba(255, 255, 255, 0.4);
      margin-bottom: 15px;
    
        h4 {
          margin-top: 0;
        }
                                                                                                                                                                                                               
        .fields {
          display: none;
          padding: 0 15px;
          margin-bottom: 15px;
        }
                                                                                                                                                                                                               
        .indicator {
          border-width: 5px;
          border-color: transparent transparent transparent #333333;
          border-style: solid;
          display: block;
          float: left;
          margin: 11px 0 0 10px;
        }
                                                                                                                                                                                                               
        &.expanded .indicator {
          border-color: #333333 transparent transparent transparent;
          margin-top: 14px;
        }
    }
                                                                                                                                                                                                       
    &:first-of-type {
      margin-top: 0;
    }

    .title {
        overflow: hidden;
        @include border-radius(5px);

        &:hover {
            background-color: rgba(255,255,255, 0.5);
            cursor: pointer;

            span {
                text-decoration: underline;

                &.http-method {
                    text-decoration: none;
                }
            }

        }

        span {
            margin: 0 10px 0;
            line-height: 33px;
            float: left;
        }

        .uri {
            color: #777;
        }

        .name {
            font-size: 16px;
        }

        .description {
            float: right;
            font-size: 12px;
            text-align: right;
        }

        .http-method {
            padding: 0 10px;
            width: 40px;
            font-size: 12px;
            text-align: center;
            margin: 0;
            @include monospace;
            @include border-radius(5px);
            color: #fff;
            line-height: 33px;
            float: left;
        }

    }

    // Instead of this indicator, maybe do a validation check on attempt and tell them to set their key/secret.
/*    &.authrequired .http-method {
        background-image: url(/images/lock.png);
        background-repeat: no-repeat;
        background-position: 7px 50%;
    }*/

    form {
        clear: both;
        padding: 15px;
        display: none;

        a.clear-results {
            color: red;
            margin-left: 20px;
            font-size: 12px;

            &:hover {
                background-color: red;
                color: #fff;
            }
        }
    }

    table {
        margin-bottom: 15px;
        width: 100%;
    }

    tr.required {
        font-weight: bold;
    }

    th {
        font-weight: bold;
        text-align: left;
    }

    th, td {
        padding: 5px;
        vertical-align: middle;
    }

    td, pre {
        @include monospace;
    }

    td {
        &.description {
            font-family: 'Helvetica Neue', Arial, Helvetica, sans-serif;
            font-size: 13px;
        }

        &.description p {
          font-size: inherit;
        }

        &.type  {
            font-size: 12px;
        }
    }

    h4 {
        margin-top: 15px;
        margin-bottom: 3px;

        a.select-all {
            font-size: 12px;
            margin-left: 15px;
        }
    }

    pre {
        font-size: 12px;
        overflow: auto;
        border: 1px solid rgba(0,0,0,0.2);
        background-color: rgba(255,255,255,0.4);

        &.response {
            max-height: 500px;
        }

        &.prettyprint {
            padding: 10px;
            border: 1px solid rgba(0, 0, 0, 0.2);
        }

        &.error {
            background-color: rgba(255,66,66,0.2);
            border-color: rgba(255, 100, 100,0.5);
        }
    }
}

@include method();
@include method('post', $post);
@include method('put', $put);
@include method('delete', $delete);


.ir {
  display: block;
  text-indent: -999em;
  overflow: hidden;
  background-repeat: no-repeat;
  text-align: left;
  direction: ltr;
}

.visuallyhidden {
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

.visuallyhidden.focusable:active,
.visuallyhidden.focusable:focus {
  clip: auto;
  height: auto;
  margin: 0;
  overflow: visible;
  position: static;
  width: auto;
}

.invisible {
  visibility: hidden;
}

.clearfix:before,
.clearfix:after {
  content: "\0020";
  display: block;
  height: 0;
  overflow: hidden;
}

.clearfix:after {
  clear: both;
}

.clearfix {
  zoom: 1;
}

dl {
  display: inline-block;
  margin-bottom: 10px;
  font-weight: normal;
}
dt {
  width: 30%;
  border-top: 1px rgba(0,0,0,.2) solid;
  padding-top: 5px;
  margin-top: 5px;
  display: block;
  float: left;
}
dd {
  width: 70%;
  border-top: 1px rgba(0,0,0,.2) solid;
  padding-top: 5px;
  margin-top: 5px;
  display: block;
  float: left;
}

/**/
/* New additions. */
/**/

/* Type-ahead search css */
.ui-autocomplete-category {
    font-weight: bold;
    padding: .2em .4em;
    margin: .8em 0 .2em;
    line-height: 1.5;
}

/* Used to hide endpoints and methods that do not match for a given search */
.hide-this {
    display: none;
}

/* Bookmark css - Making the entire method bar clickable.*/
/* http://blog.avtex.com/2012/01/27/how-to-make-an-entire-div-clickable-with-css/ */
div.clickable { /* Containing div must have a position value */
    position:relative;
}

div.clickable a {
    position:absolute;
    width:100%;
    height:100%;
    top:0;
    left:0;
    text-decoration:none; /* Makes sure the link   doesn't get underlined */
    /* Commenting out z-index as it is causing problems with search results
    which also makes use of z-index. Can probably resolve conflict with 
    different values.
    z-index:10; */ /* raises anchor tag above everything else in div */
    background-color:white; /*workaround to make clickable in IE */
    opacity: 0; /*workaround to make clickable in IE */
    filter: alpha(opacity=1); /*workaround to make clickable in IE */
}

/* Rotating minimize triangle */
/* http://webdesigncrowd.com/animated-buttons-css3-transitions-transforms/ */ 

.button-container{
    position: relative; /*Important, Keeps the CSS3 Shapes in place*/
    margin: 3px;
    width: 25px;
    height: 25px;
    padding: 3px 0;
}
.arrow-container {
    position: relative;
    top: 0px;
    right: 0px;
    margin: 5px;
    width: 25px;
    height: 23px;
    -webkit-transition: -webkit-transform 0.3s ease-out;
    -moz-transition: -moz-transform 0.3s ease-out;
    transition: transform 0.3s ease-out;
}

.arrow-down { 
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid black;
    font-size:0px;
    line-height: 0px;
}

.rotate{
    -webkit-transform: rotateZ(-90deg) translateX(5px);
    -moz-transform: rotateZ(-90deg) translateX(5px);
    transform: rotateZ(-90deg) translateX(5px);
}

/* api header */

div#api-header div.logo {
  float: left;
  width: 80px;
  height: 100px;
  padding-right: 15px;
  padding-bottom: 10px;
}

div#api-header div.logo img {
  max-width: 100%;
  max-height: 100%;
}

div#api-header h1 {
  display: inline-block;
  padding-left: 5px;
}

/* api-search */

.api-search {
  background-color: #e7f6ec;
  border: 1px solid #afe1c0;
  -webkit-border-radius: 5px;
  -moz-border-radius: 5px;
  -ms-border-radius: 5px;
  -o-border-radius: 5px;
  border-radius: 5px;
  overflow: hidden;
  *zoom: 1;
  padding: 15px;
  margin: 10px 0px;
}

.api-search div {
  float: left;
  margin-right: 15px;
}

.api-search label {
  font-weight: bold;
  display: inline-block;
  text-align: right;
  margin-bottom: 3px;
  padding-right: 10px;
  width: 160px;
}
.api-search input {
  width: 400px;
  display: inline-block;
  float: right;
}

.api-search #clear-search {
  margin-left: 10px;
  display: inline-block;
}


/* Nested lists for nested PUT/POST content parameters */

%border-spacing {
    margin: {
        top: 1%;
        bottom: 1%;
    }
}

%inline-lists {
    display: inline-block;
}

@mixin content($method: 'get', $color: $get) {
    .#{$method} div.content {
        ul {
            // ul generally represents rows. Using 'display: block' for line breaks.
            display: block;
            margin-left: 2%;
            list-style: none;

            // For 'ul' with the following classes, make their list elements in-line.
            // Rows!
            &.header, &.string, &.integer, &.enumerated, &.list, &.list-only, &.text {
                @extend %border-spacing;

                & > li {
                    @extend %inline-lists;
                    &.parameter {
                        margin-right: 1em;
                    }
                }
                
                border-bottom: 1px solid darken($color, 20%);
                padding-top: 4px;
                padding-bottom: 10px;
            }

            &.header {
                font-weight: bold;
                > li.parameter, {
                    width: 10em;
                }
            }

            &.collection, &.object {
                @extend %border-spacing;

                // Making the following list elements into a row since the parameter
                // list element will contain a 'ul' and start on the following line
                & > li.name, & > li.type, & > li.description {
                    @extend %inline-lists;
                }

                // Remove left margin for the collection/object parameter container.
    /* May want to just setup ul.subcontainer and style that instead. */
                & > li.parameter > ul {
                    margin-left: 0;
                }
            }

            /* For list and list-only type parameters, add a bit of margin
                for spacing between the added boxes. */
            &.list-only, &.list {
                & > li.parameter > ul > li {
                    margin-bottom: 4%;
                }
            }

            // Spacing between list elements.
            // Don't think text is wrapped like it would be in table cells,
            // should check on this. 
            li {
                &.name {
                    width: 8em;
                    word-wrap: break-word;
                    vertical-align: top;
                }
                &.type {
                    width: 8em;
                    vertical-align: top;
                }
                &.description {
                    width: 27em;
                    word-wrap: break-word;
                    vertical-align: top;
                }
                a {
                    margin: 0px 5px;
                    display: inline-block;
                }
            }
        }

        /* Darkening the background for collection parameters by nesting level, only goes 3 deep */
        ul.collection ul.parameters {
            background-color: saturate(darken($color, 5%), 30%);
            @include border-radius(5px);
        }

        ul.collection ul.parameters ul.collection ul.parameters {
            background-color: saturate(darken($color, 10%), 20%);
            @include border-radius(5px);
        }

        ul.collection ul.parameters ul.collection ul.parameters ul.collection ul.parameters {
            background-color: saturate(darken($color, 15%), 10%);
            @include border-radius(5px);
        }

        /* Initial alignment */
        // This needs to go at the end of the div.content block,
        // otherwise 'div.content ul' seems to override the rule.
        > ul {
            margin-left: 0;
            > li > ul {
                margin-left: 0;
            }
        }

        div.contentType {
            p, select {
                margin-right: 5px;
                display: inline-block;
            }
            margin: 5px 0px 10px;
        }

        // In the event that things are so deeply nested, this will make it possible
        // to see nested content parameters.
        overflow-x: scroll;
        margin-bottom: 5px;
    }
}

/* Only need this for PUT and POST methods, GET and DELETE won't have content
    blocks. Or at least don't currently.
 */
@include content('post', $post);
@include content('put', $put);

/* Existed previously, believe (perhaps incorrectly) @media declarations should
 exist between style declarations, so moved to the end. */

@media all and (orientation:portrait) {
}

@media all and (orientation:landscape) {
}

@media screen and (max-device-width: 480px) {
}

@media print {
    * { background: transparent !important; color: black !important; text-shadow: none !important; filter:none !important;
    -ms-filter: none !important; }
    /* Black prints faster: sanbeiji.com/archives/953 */
    a, a:visited { color: #444 !important; text-decoration: underline; }

    a[href]:after { content: " (" attr(href) ")"; }

    abbr[title]:after { content: " (" attr(title) ")"; }

    .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; }
    /* Don't show links for images, or javascript/internal links */
    pre, blockquote { border: 1px solid #999999; page-break-inside: avoid; }

    thead { display: table-header-group; }
    /* css-discuss.incutio.com/wiki/Printing_Tables */
    tr, img { page-break-inside: avoid; }

    @page { margin: 0.5cm; }

    p, h2, h3 { orphans: 3; widows: 3; }

    h2, h3{ page-break-after: avoid; }
}
